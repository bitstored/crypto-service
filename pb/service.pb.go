// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	SecretPhrase         []byte   `protobuf:"bytes,2,opt,name=secret_phrase,json=secretPhrase,proto3" json:"secret_phrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *File) GetSecretPhrase() []byte {
	if m != nil {
		return m.SecretPhrase
	}
	return nil
}

type EncryptFileRequest struct {
	OriginalFile         *File    `protobuf:"bytes,1,opt,name=original_file,json=originalFile,proto3" json:"original_file,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptFileRequest) Reset()         { *m = EncryptFileRequest{} }
func (m *EncryptFileRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptFileRequest) ProtoMessage()    {}
func (*EncryptFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *EncryptFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptFileRequest.Unmarshal(m, b)
}
func (m *EncryptFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptFileRequest.Marshal(b, m, deterministic)
}
func (m *EncryptFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptFileRequest.Merge(m, src)
}
func (m *EncryptFileRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptFileRequest.Size(m)
}
func (m *EncryptFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptFileRequest proto.InternalMessageInfo

func (m *EncryptFileRequest) GetOriginalFile() *File {
	if m != nil {
		return m.OriginalFile
	}
	return nil
}

func (m *EncryptFileRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type EncryptFileResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	EncryptedData        []byte   `protobuf:"bytes,3,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptFileResponse) Reset()         { *m = EncryptFileResponse{} }
func (m *EncryptFileResponse) String() string { return proto.CompactTextString(m) }
func (*EncryptFileResponse) ProtoMessage()    {}
func (*EncryptFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *EncryptFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptFileResponse.Unmarshal(m, b)
}
func (m *EncryptFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptFileResponse.Marshal(b, m, deterministic)
}
func (m *EncryptFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptFileResponse.Merge(m, src)
}
func (m *EncryptFileResponse) XXX_Size() int {
	return xxx_messageInfo_EncryptFileResponse.Size(m)
}
func (m *EncryptFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptFileResponse proto.InternalMessageInfo

func (m *EncryptFileResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *EncryptFileResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *EncryptFileResponse) GetEncryptedData() []byte {
	if m != nil {
		return m.EncryptedData
	}
	return nil
}

type DecryptFileRequest struct {
	EncryptedFile        *File    `protobuf:"bytes,1,opt,name=encrypted_file,json=encryptedFile,proto3" json:"encrypted_file,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SecretPhrase         []byte   `protobuf:"bytes,3,opt,name=secret_phrase,json=secretPhrase,proto3" json:"secret_phrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptFileRequest) Reset()         { *m = DecryptFileRequest{} }
func (m *DecryptFileRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptFileRequest) ProtoMessage()    {}
func (*DecryptFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *DecryptFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptFileRequest.Unmarshal(m, b)
}
func (m *DecryptFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptFileRequest.Marshal(b, m, deterministic)
}
func (m *DecryptFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptFileRequest.Merge(m, src)
}
func (m *DecryptFileRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptFileRequest.Size(m)
}
func (m *DecryptFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptFileRequest proto.InternalMessageInfo

func (m *DecryptFileRequest) GetEncryptedFile() *File {
	if m != nil {
		return m.EncryptedFile
	}
	return nil
}

func (m *DecryptFileRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DecryptFileRequest) GetSecretPhrase() []byte {
	if m != nil {
		return m.SecretPhrase
	}
	return nil
}

type DecryptFileResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	OriginalData         []byte   `protobuf:"bytes,3,opt,name=original_data,json=originalData,proto3" json:"original_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptFileResponse) Reset()         { *m = DecryptFileResponse{} }
func (m *DecryptFileResponse) String() string { return proto.CompactTextString(m) }
func (*DecryptFileResponse) ProtoMessage()    {}
func (*DecryptFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *DecryptFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptFileResponse.Unmarshal(m, b)
}
func (m *DecryptFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptFileResponse.Marshal(b, m, deterministic)
}
func (m *DecryptFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptFileResponse.Merge(m, src)
}
func (m *DecryptFileResponse) XXX_Size() int {
	return xxx_messageInfo_DecryptFileResponse.Size(m)
}
func (m *DecryptFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptFileResponse proto.InternalMessageInfo

func (m *DecryptFileResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *DecryptFileResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *DecryptFileResponse) GetOriginalData() []byte {
	if m != nil {
		return m.OriginalData
	}
	return nil
}

type EncryptPasswordRequest struct {
	Password             []byte   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	IterationCount       int32    `protobuf:"varint,2,opt,name=iteration_count,json=iterationCount,proto3" json:"iteration_count,omitempty"`
	Salt                 []byte   `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptPasswordRequest) Reset()         { *m = EncryptPasswordRequest{} }
func (m *EncryptPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptPasswordRequest) ProtoMessage()    {}
func (*EncryptPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *EncryptPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptPasswordRequest.Unmarshal(m, b)
}
func (m *EncryptPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptPasswordRequest.Marshal(b, m, deterministic)
}
func (m *EncryptPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptPasswordRequest.Merge(m, src)
}
func (m *EncryptPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptPasswordRequest.Size(m)
}
func (m *EncryptPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptPasswordRequest proto.InternalMessageInfo

func (m *EncryptPasswordRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *EncryptPasswordRequest) GetIterationCount() int32 {
	if m != nil {
		return m.IterationCount
	}
	return 0
}

func (m *EncryptPasswordRequest) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

type EncryptPasswordResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Password             []byte   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptPasswordResponse) Reset()         { *m = EncryptPasswordResponse{} }
func (m *EncryptPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*EncryptPasswordResponse) ProtoMessage()    {}
func (*EncryptPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *EncryptPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptPasswordResponse.Unmarshal(m, b)
}
func (m *EncryptPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptPasswordResponse.Marshal(b, m, deterministic)
}
func (m *EncryptPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptPasswordResponse.Merge(m, src)
}
func (m *EncryptPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_EncryptPasswordResponse.Size(m)
}
func (m *EncryptPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptPasswordResponse proto.InternalMessageInfo

func (m *EncryptPasswordResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *EncryptPasswordResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *EncryptPasswordResponse) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

type EncryptRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptRequest) Reset()         { *m = EncryptRequest{} }
func (m *EncryptRequest) String() string { return proto.CompactTextString(m) }
func (*EncryptRequest) ProtoMessage()    {}
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *EncryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptRequest.Unmarshal(m, b)
}
func (m *EncryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptRequest.Marshal(b, m, deterministic)
}
func (m *EncryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptRequest.Merge(m, src)
}
func (m *EncryptRequest) XXX_Size() int {
	return xxx_messageInfo_EncryptRequest.Size(m)
}
func (m *EncryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptRequest proto.InternalMessageInfo

func (m *EncryptRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EncryptResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptResponse) Reset()         { *m = EncryptResponse{} }
func (m *EncryptResponse) String() string { return proto.CompactTextString(m) }
func (*EncryptResponse) ProtoMessage()    {}
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *EncryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptResponse.Unmarshal(m, b)
}
func (m *EncryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptResponse.Marshal(b, m, deterministic)
}
func (m *EncryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptResponse.Merge(m, src)
}
func (m *EncryptResponse) XXX_Size() int {
	return xxx_messageInfo_EncryptResponse.Size(m)
}
func (m *EncryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptResponse proto.InternalMessageInfo

func (m *EncryptResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *EncryptResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *EncryptResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DecryptRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptRequest) Reset()         { *m = DecryptRequest{} }
func (m *DecryptRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptRequest) ProtoMessage()    {}
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *DecryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRequest.Unmarshal(m, b)
}
func (m *DecryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRequest.Marshal(b, m, deterministic)
}
func (m *DecryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRequest.Merge(m, src)
}
func (m *DecryptRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptRequest.Size(m)
}
func (m *DecryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRequest proto.InternalMessageInfo

func (m *DecryptRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DecryptResponse struct {
	ResponseCode         int32    `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptResponse) Reset()         { *m = DecryptResponse{} }
func (m *DecryptResponse) String() string { return proto.CompactTextString(m) }
func (*DecryptResponse) ProtoMessage()    {}
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *DecryptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptResponse.Unmarshal(m, b)
}
func (m *DecryptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptResponse.Marshal(b, m, deterministic)
}
func (m *DecryptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptResponse.Merge(m, src)
}
func (m *DecryptResponse) XXX_Size() int {
	return xxx_messageInfo_DecryptResponse.Size(m)
}
func (m *DecryptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptResponse proto.InternalMessageInfo

func (m *DecryptResponse) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *DecryptResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *DecryptResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*File)(nil), "crypto_service.File")
	proto.RegisterType((*EncryptFileRequest)(nil), "crypto_service.EncryptFileRequest")
	proto.RegisterType((*EncryptFileResponse)(nil), "crypto_service.EncryptFileResponse")
	proto.RegisterType((*DecryptFileRequest)(nil), "crypto_service.DecryptFileRequest")
	proto.RegisterType((*DecryptFileResponse)(nil), "crypto_service.DecryptFileResponse")
	proto.RegisterType((*EncryptPasswordRequest)(nil), "crypto_service.EncryptPasswordRequest")
	proto.RegisterType((*EncryptPasswordResponse)(nil), "crypto_service.EncryptPasswordResponse")
	proto.RegisterType((*EncryptRequest)(nil), "crypto_service.EncryptRequest")
	proto.RegisterType((*EncryptResponse)(nil), "crypto_service.EncryptResponse")
	proto.RegisterType((*DecryptRequest)(nil), "crypto_service.DecryptRequest")
	proto.RegisterType((*DecryptResponse)(nil), "crypto_service.DecryptResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0x6e, 0x96, 0xae, 0x85, 0xb7, 0x36, 0x45, 0x1e, 0x62, 0x55, 0x0f, 0x80, 0xdc, 0xc1, 0xe0,
	0xd2, 0xc3, 0x38, 0x21, 0x6e, 0x74, 0x43, 0x42, 0x02, 0x69, 0xca, 0x09, 0x71, 0x89, 0xbc, 0xe4,
	0xb1, 0x45, 0x2a, 0x71, 0x66, 0xbb, 0x20, 0xfe, 0x00, 0x2e, 0x08, 0x89, 0xff, 0x88, 0xbf, 0x0d,
	0xc5, 0xb1, 0x4d, 0x52, 0xaf, 0xed, 0xa9, 0xbb, 0xc5, 0x9f, 0x9f, 0xbf, 0xef, 0x7b, 0xbf, 0x5a,
	0x18, 0x4a, 0x14, 0xdf, 0xf2, 0x14, 0x67, 0xa5, 0xe0, 0x8a, 0x93, 0x28, 0x15, 0x3f, 0x4a, 0xc5,
	0x13, 0x83, 0xd2, 0x73, 0xe8, 0xbe, 0xcb, 0x17, 0x48, 0xc6, 0xd0, 0x4f, 0x79, 0xa1, 0xb0, 0x50,
	0xe3, 0xe0, 0x69, 0xf0, 0x62, 0x10, 0xdb, 0x23, 0x99, 0x56, 0x14, 0xa9, 0x40, 0x95, 0x94, 0xd7,
	0x82, 0x49, 0x1c, 0xef, 0xe9, 0xfb, 0x41, 0x0d, 0x5e, 0x68, 0x8c, 0x5e, 0x03, 0x39, 0x2f, 0x34,
	0x75, 0xc5, 0x16, 0xe3, 0xcd, 0x12, 0xa5, 0x22, 0xaf, 0x61, 0xc8, 0x45, 0x7e, 0x95, 0x17, 0x6c,
	0x91, 0x7c, 0xc9, 0x17, 0xa8, 0xa9, 0x0f, 0x4e, 0x1f, 0xce, 0xda, 0x26, 0x66, 0xfa, 0xcd, 0xc0,
	0x86, 0x6a, 0x3f, 0x47, 0xd0, 0x5f, 0x4a, 0x14, 0x49, 0x9e, 0x69, 0xbd, 0xfb, 0x71, 0xaf, 0x3a,
	0xbe, 0xcf, 0xe8, 0xef, 0x00, 0x0e, 0x5b, 0x52, 0xb2, 0xe4, 0x85, 0xc4, 0xca, 0xa6, 0x30, 0xdf,
	0x49, 0xca, 0xb3, 0x5a, 0x6b, 0x3f, 0x1e, 0x58, 0x70, 0xce, 0x33, 0x24, 0x2f, 0xe1, 0x81, 0x0b,
	0xfa, 0x8a, 0x52, 0xb2, 0x2b, 0x34, 0xf4, 0x23, 0x8b, 0x7f, 0xac, 0x61, 0xf2, 0x0c, 0x22, 0xac,
	0x65, 0x30, 0x4b, 0x32, 0xa6, 0xd8, 0x38, 0xd4, 0x79, 0x0f, 0x1d, 0x7a, 0xc6, 0x14, 0xa3, 0x7f,
	0x02, 0x20, 0x67, 0xe8, 0x65, 0xfe, 0xa6, 0xf9, 0x7a, 0x6b, 0xea, 0xff, 0x39, 0x37, 0xe6, 0xee,
	0xb7, 0x22, 0xbc, 0xa5, 0x15, 0xbf, 0x02, 0x38, 0x6c, 0x39, 0xda, 0x51, 0x81, 0xa6, 0x8d, 0xe6,
	0x36, 0xea, 0xe3, 0xda, 0xa8, 0xcb, 0x73, 0x03, 0x8f, 0x4c, 0xb3, 0x2e, 0x98, 0x94, 0xdf, 0xb9,
	0xc8, 0x6c, 0x85, 0x26, 0x70, 0xaf, 0x34, 0x90, 0x99, 0x38, 0x77, 0x26, 0x27, 0x30, 0xca, 0x15,
	0x0a, 0xa6, 0x72, 0x5e, 0x24, 0x29, 0x5f, 0x16, 0x4a, 0x9b, 0xd8, 0x8f, 0x23, 0x07, 0xcf, 0x2b,
	0x94, 0x10, 0xe8, 0x4a, 0xb6, 0x50, 0x46, 0x5a, 0x7f, 0xd3, 0x9f, 0x01, 0x1c, 0x79, 0x9a, 0x3b,
	0xaa, 0x41, 0x33, 0x89, 0xb0, 0x9d, 0x04, 0x3d, 0x86, 0xc8, 0xd8, 0xb0, 0x29, 0x13, 0xe8, 0xea,
	0x42, 0xd5, 0xe9, 0xea, 0x6f, 0xba, 0x84, 0x91, 0x8b, 0xda, 0x91, 0x49, 0x2b, 0x1b, 0x36, 0x64,
	0x8f, 0x21, 0x32, 0x33, 0xb2, 0xc5, 0x9c, 0x8b, 0xba, 0x3b, 0x73, 0xa7, 0x7f, 0x43, 0xe8, 0xcd,
	0xf5, 0x9a, 0x90, 0x4f, 0x70, 0xd0, 0x58, 0x76, 0x42, 0x57, 0xd7, 0xc7, 0xff, 0xd1, 0x99, 0x4c,
	0x37, 0xc6, 0xd4, 0xea, 0xb4, 0x53, 0x31, 0x37, 0xb6, 0xc4, 0x67, 0xf6, 0x97, 0xda, 0x67, 0xbe,
	0x65, 0xcd, 0x68, 0x87, 0x64, 0xae, 0xa5, 0x76, 0xfe, 0xc8, 0xf3, 0x35, 0x9e, 0x56, 0x96, 0x62,
	0x72, 0xb2, 0x35, 0xce, 0xa9, 0x7c, 0x80, 0xbe, 0xb9, 0x24, 0x8f, 0xd7, 0xbc, 0xb2, 0xac, 0x4f,
	0xd6, 0xde, 0x37, 0xd9, 0x4c, 0x32, 0x3e, 0x5b, 0x7b, 0x50, 0x7c, 0xb6, 0x95, 0x11, 0xa1, 0x9d,
	0xb7, 0xdd, 0xcf, 0x7b, 0xe5, 0xe5, 0x65, 0x4f, 0xff, 0xe3, 0xbc, 0xfa, 0x17, 0x00, 0x00, 0xff,
	0xff, 0xd0, 0x5f, 0x9a, 0x51, 0x82, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CryptoClient is the client API for Crypto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CryptoClient interface {
	EncryptFile(ctx context.Context, in *EncryptFileRequest, opts ...grpc.CallOption) (*EncryptFileResponse, error)
	DecryptFile(ctx context.Context, in *DecryptFileRequest, opts ...grpc.CallOption) (*DecryptFileResponse, error)
	EncryptPassword(ctx context.Context, in *EncryptPasswordRequest, opts ...grpc.CallOption) (*EncryptPasswordResponse, error)
	Encrypt(ctx context.Context, in *EncryptRequest, opts ...grpc.CallOption) (*EncryptResponse, error)
	Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error)
}

type cryptoClient struct {
	cc *grpc.ClientConn
}

func NewCryptoClient(cc *grpc.ClientConn) CryptoClient {
	return &cryptoClient{cc}
}

func (c *cryptoClient) EncryptFile(ctx context.Context, in *EncryptFileRequest, opts ...grpc.CallOption) (*EncryptFileResponse, error) {
	out := new(EncryptFileResponse)
	err := c.cc.Invoke(ctx, "/crypto_service.Crypto/EncryptFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cryptoClient) DecryptFile(ctx context.Context, in *DecryptFileRequest, opts ...grpc.CallOption) (*DecryptFileResponse, error) {
	out := new(DecryptFileResponse)
	err := c.cc.Invoke(ctx, "/crypto_service.Crypto/DecryptFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cryptoClient) EncryptPassword(ctx context.Context, in *EncryptPasswordRequest, opts ...grpc.CallOption) (*EncryptPasswordResponse, error) {
	out := new(EncryptPasswordResponse)
	err := c.cc.Invoke(ctx, "/crypto_service.Crypto/EncryptPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cryptoClient) Encrypt(ctx context.Context, in *EncryptRequest, opts ...grpc.CallOption) (*EncryptResponse, error) {
	out := new(EncryptResponse)
	err := c.cc.Invoke(ctx, "/crypto_service.Crypto/Encrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cryptoClient) Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error) {
	out := new(DecryptResponse)
	err := c.cc.Invoke(ctx, "/crypto_service.Crypto/Decrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CryptoServer is the server API for Crypto service.
type CryptoServer interface {
	EncryptFile(context.Context, *EncryptFileRequest) (*EncryptFileResponse, error)
	DecryptFile(context.Context, *DecryptFileRequest) (*DecryptFileResponse, error)
	EncryptPassword(context.Context, *EncryptPasswordRequest) (*EncryptPasswordResponse, error)
	Encrypt(context.Context, *EncryptRequest) (*EncryptResponse, error)
	Decrypt(context.Context, *DecryptRequest) (*DecryptResponse, error)
}

func RegisterCryptoServer(s *grpc.Server, srv CryptoServer) {
	s.RegisterService(&_Crypto_serviceDesc, srv)
}

func _Crypto_EncryptFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncryptFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).EncryptFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto_service.Crypto/EncryptFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).EncryptFile(ctx, req.(*EncryptFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crypto_DecryptFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).DecryptFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto_service.Crypto/DecryptFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).DecryptFile(ctx, req.(*DecryptFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crypto_EncryptPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncryptPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).EncryptPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto_service.Crypto/EncryptPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).EncryptPassword(ctx, req.(*EncryptPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crypto_Encrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).Encrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto_service.Crypto/Encrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).Encrypt(ctx, req.(*EncryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crypto_Decrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).Decrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto_service.Crypto/Decrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).Decrypt(ctx, req.(*DecryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Crypto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crypto_service.Crypto",
	HandlerType: (*CryptoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EncryptFile",
			Handler:    _Crypto_EncryptFile_Handler,
		},
		{
			MethodName: "DecryptFile",
			Handler:    _Crypto_DecryptFile_Handler,
		},
		{
			MethodName: "EncryptPassword",
			Handler:    _Crypto_EncryptPassword_Handler,
		},
		{
			MethodName: "Encrypt",
			Handler:    _Crypto_Encrypt_Handler,
		},
		{
			MethodName: "Decrypt",
			Handler:    _Crypto_Decrypt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
